/*
 * Stream Chat API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v71.1.2
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DeviceRequest {
    /// Date/time of creation
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Whether device is disabled or not
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    /// Reason explaining why device had been disabled
    #[serde(rename = "disabled_reason", skip_serializing_if = "Option::is_none")]
    pub disabled_reason: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "push_provider", skip_serializing_if = "Option::is_none")]
    pub push_provider: Option<String>,
    #[serde(rename = "push_provider_name", skip_serializing_if = "Option::is_none")]
    pub push_provider_name: Option<String>,
    #[serde(rename = "user_id", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
}

impl DeviceRequest {
    pub fn new() -> DeviceRequest {
        DeviceRequest {
            created_at: None,
            disabled: None,
            disabled_reason: None,
            id: None,
            push_provider: None,
            push_provider_name: None,
            user_id: None,
        }
    }
}


